const strategy = `A Y
B Y
B Z
B Z
B X
B Z
C Y
A Z
C X
C X
B Z
B Z
B Z
A X
B Z
B Z
A Y
B Z
A Z
B X
B Z
A X
A X
B Z
A Y
A Z
B Z
A Y
A Z
B Z
A Z
B Z
B Z
C Y
B Z
B Z
A X
C X
B Z
A X
B Z
C X
A X
B Z
A X
A X
C X
B Z
B Z
B Z
C Y
C Y
A X
B Z
C X
B Z
A X
A Y
B Z
B Z
B Z
B Z
B Z
B X
B Z
B Z
B Z
B X
A X
A X
B Z
A Y
C Y
C Y
A Y
A X
B Z
A Y
A Z
A X
A X
A Y
C Y
B Z
B Z
C X
B Z
A Y
A X
B Z
B Z
A X
A X
A X
B Z
A Y
B Z
A Z
C Y
B Z
B Z
B Z
C Y
A Y
C Y
B Z
A X
B Z
A X
B Z
C Y
B Z
B Z
B Z
C X
B Z
A X
B Z
B Z
B Z
A X
A X
B X
C Y
B Z
B Z
B Z
A X
B Z
A X
B Z
A X
A Z
A X
B Z
A X
C Y
A X
B Z
A X
C Y
B Z
B Z
A X
A X
B Z
C Y
B Y
B Z
B Z
B Z
B X
B Z
B Z
B Z
A X
B Z
C Y
C Y
A Z
A X
B Z
B Z
B Y
B Z
B Z
C Y
B Z
B Y
B Z
C Y
B Z
B Z
C X
C X
C X
B Z
A Z
A X
C Y
A Z
B Z
B Z
B Z
B Z
A X
A X
B Z
B Z
A Z
A X
A X
B Z
C Y
A X
A Z
A Y
A Y
A X
B Z
A X
A Z
B Z
C X
B Z
C X
C Y
B Z
B Z
B Z
B Z
B Z
C Y
A X
C Y
A X
B Y
B Y
A X
A X
B Z
B Z
C X
A Z
C Y
A X
A X
A Y
A X
A X
B Z
A Z
B Z
B Z
B Z
A Z
A X
B Z
B Z
C Y
B Z
B Z
B Z
A X
A X
B Z
B Z
B Z
B Z
B Z
B Z
A X
C X
A X
A X
C Y
A X
B Z
C Y
B Z
B Z
B Z
A X
B Z
C Y
B Z
A X
A X
B Z
A X
A X
B Z
A Z
B X
A X
A X
B Z
C Y
A Y
A X
C X
B Z
A X
B Z
B Z
A X
B Z
A Z
C Y
B Z
B Z
A X
A X
B X
A X
B Z
B Z
C X
A X
C X
A X
B Z
B Z
A X
A Z
B Z
B X
A X
A Y
B Z
B Z
B Z
C X
C Y
B Z
B Z
C Z
B X
C Y
C Z
B Z
B Z
A X
B Z
C X
B Z
B Z
A Z
A X
C X
B Z
B Z
A X
C Y
A X
B X
C Z
B Z
B Z
A X
B Z
A Y
B Z
B Z
A X
B Z
C Y
C Y
A X
C Y
C X
C X
A X
B Z
C Y
B Z
C X
B Z
A Z
B Z
A Z
B X
B Z
A Z
A X
B Z
B Z
B Z
A X
A X
A X
B Z
A X
B Z
B X
A Y
B Z
A X
B Z
B Z
B Z
A X
B Z
C X
A Y
A X
A Z
C Y
C Y
A X
C Y
B Z
A X
B Z
C Y
B X
A Z
B Z
B Z
B X
B Z
B Z
B Z
A Y
A Y
C Y
A Z
A X
B Z
B Z
A X
A X
A X
B Z
A X
B Z
B Y
A X
A X
A X
B Z
B Z
B Z
C Y
A X
A X
A X
A X
A X
A X
C Y
A Z
C X
B Z
B Z
C Z
A X
A X
B Z
A X
B X
B Z
B Z
C X
B Z
A Z
A X
B Z
A Z
B Z
B Y
A X
C Y
A X
B Z
B Z
B Z
A Z
C Y
C Z
A X
B Z
B Z
B X
A X
B Z
A X
B Z
B Z
C Z
B Z
A X
C Y
C X
A Z
C X
A X
A X
A X
B Z
B Y
C Y
B Z
B Z
C Y
B Z
A X
B Z
A Z
A X
B Z
A Y
A X
A X
B X
B Z
B Z
B Z
B Z
C Z
B Y
A X
A X
B Z
B Z
B Z
C Z
B Z
B Z
A Y
A Z
B Z
A X
C Y
B Z
A Z
C Z
B Z
C X
B Z
B Z
A X
B Z
A X
B Z
C Y
A X
B Z
A Z
B Z
C Y
A X
C X
A X
A X
B Z
B Z
B X
B Z
C X
C Y
A Z
B Z
C Y
B Z
C Y
B Y
A Y
B Z
A X
B Z
A Z
B Z
A X
C X
B Z
B X
C Y
A Z
A X
B Z
B Z
B Z
A Z
C Y
C Y
B Z
A Y
A X
A X
A Y
C Y
A Y
B Z
B Z
B Z
A Z
B Z
A Z
B Z
A X
A Z
B Z
C Y
B Z
A X
A X
A X
A Z
A Z
B Z
C Y
B Z
A X
B Z
B Z
A Z
B Z
B Z
A X
B Z
B Z
B X
A X
B Z
B Z
A Z
A X
B X
A X
B Z
A X
B Z
A X
B Z
C Y
B Z
C Z
C X
B Z
B Z
B Z
C Y
C X
B Z
B Z
B Z
B Z
A Y
A Y
C Y
A X
C X
B X
A X
C X
A Y
B X
A X
A Z
B Z
B X
B Y
B Z
B Z
B X
B Z
C Y
B Z
A X
A X
A X
B Z
A X
B Z
A X
B Z
B Z
B Z
B Z
A X
C Y
A X
B Z
B Z
B Z
A X
B Z
B Z
C Z
A X
A Z
B Z
C Y
B Z
B Z
B Z
B Z
A Z
B Z
B Z
B Z
C Y
A X
B X
C Y
A X
C Z
B Z
C Y
C Y
B Z
A X
B Z
C Z
A X
A Z
B Z
A Z
B Z
B X
B Z
A Z
B Z
C Y
C Z
B Z
A X
B Z
A X
A X
B Z
B Z
B Z
B Z
A X
A Z
A X
B X
B Z
A Y
A Y
B Z
A X
B Z
B Z
A Y
C X
B Z
B Z
B Z
C X
B Z
C X
A X
B Z
C Y
A X
A X
A X
C Z
A X
A X
A Y
B Z
B Z
B Z
B Z
B Z
C X
C Y
B Z
B Z
C X
B Z
B Z
B Z
C Y
C Y
A Z
A X
B Z
A X
B X
B Z
B Z
C Y
B Z
A X
B X
A Z
A Z
B Z
A X
C X
A X
B Z
B Z
B Z
A X
A Z
C X
B Z
A X
A Z
A Z
A Z
A Z
C Y
B X
B X
C Z
B X
C Z
A X
A Y
B Z
B X
A Y
A Z
B X
A X
A X
C Z
A Z
B Z
C X
B Z
B Z
C X
B Z
C X
A X
A Y
A X
B Z
A X
B Z
C Y
B Z
B Z
B Z
B Z
B Z
B Z
B Z
B Z
B Z
A X
B Z
A X
B Z
A Y
B Z
A X
A Z
B Z
C Y
A Z
A X
A Z
C X
B Z
B Z
B Z
A X
C X
C Y
B Z
A Z
A Z
C X
B Z
C Y
A Z
A Z
A Y
B Z
A Z
B Z
B Y
C Y
B Z
B Z
A Z
A X
B Z
C Y
B Z
B Z
B Z
B Z
B Z
A X
C Y
B X
C X
B Z
A Z
B Z
A X
B Z
B Z
A X
C Y
A X
A X
A X
C X
A X
A X
B Z
A Y
A X
B Z
C X
A X
C Z
A X
B Z
C X
A X
A X
A X
B Z
C X
B Z
B Z
A X
A X
A X
A X
B Z
A X
A X
B Z
B X
A Y
A X
C X
A X
C X
A X
B Z
B Z
B Z
B Z
B Z
A X
A X
B X
C Y
A Y
C X
C X
C X
B Z
B Z
B X
B Z
B Z
C X
B Z
B Z
A X
B Z
B Z
B X
A X
A X
C Y
C X
A X
C Y
A Y
C X
B Z
A X
A Z
B Z
B Z
B X
B Z
B Z
B Z
C Y
B X
A X
B Z
A X
B Z
A X
A Z
A Y
C Y
B Z
C Y
A Z
A Z
B Z
A X
A X
C Y
C Y
A X
B Z
A X
C X
C Z
A X
A Y
A X
A X
A X
B Z
B Z
B Z
C Y
B Z
B Z
C Z
A X
B Z
B Z
A X
A X
B Z
B Z
B Z
A Y
B X
A Z
A Z
B Z
A X
B Z
B Y
A Y
A X
C Y
A Z
B Z
C X
C X
A X
B Z
A X
A X
A Z
B Z
A Z
A Z
B Z
B Z
A Y
B Z
C Y
C X
B Z
A X
A X
B Z
B Z
A X
A X
C Y
B Z
A Z
A X
B Z
C Y
B Z
A X
A X
B X
A X
B Z
C Y
B Z
A Y
B Z
B Z
B Z
B X
A X
B Z
C Y
B Z
B Z
B Z
A Z
C Y
C Y
C Y
A X
A Z
A X
B Z
A X
B Z
A X
C Y
B Z
B Z
A X
B Z
A X
A X
B Z
B Z
A X
A X
C X
B Z
A Y
A X
A X
B Z
C Y
C X
C X
B Y
A Z
B Z
A Z
A X
B Z
C Y
B Z
A X
A Z
B Z
A X
A Y
A X
B Z
B Z
B Y
B Z
A X
B Z
B Z
B Z
C Y
A X
B Z
B Z
A X
A X
A X
B Z
A Y
B Z
A Z
A X
B Z
C X
B Z
A X
A Z
A Z
B Z
A X
B Z
B Z
B Z
B Z
C Y
A Y
A Z
A X
A Y
B Z
B Z
B Z
C Y
C Y
B Z
A Y
A Z
A X
B Z
A Z
B Z
A X
C Y
B Z
B Z
B Z
B Z
B Z
C X
A Z
B Z
A Z
B Z
A X
B Z
A X
A Y
B Z
B X
B Z
A Y
B Z
A Z
B Z
B Z
A X
A Z
A Z
B X
B Z
A X
B X
A X
A Z
A X
C X
B Z
C X
A X
C X
A X
A X
A Z
A Z
B Z
A Z
B X
B Z
B Z
A X
B Z
B Z
A X
B Z
B Z
B Z
B Z
B Z
C X
A X
C Y
B Z
B Z
A Y
B X
B Z
A Z
B Z
B Z
C Y
B Z
A X
A Z
B Z
A Z
B Z
B Z
A X
B Z
A Z
A Z
A Z
C X
A Z
B Z
C Y
B Z
A Z
B Z
A X
A X
A X
A Z
A X
B Z
B Z
B Z
B Z
A Y
A X
C Y
C Z
B Z
A Z
A X
B Z
B X
B Z
A X
B Z
B Z
C Y
A X
B Z
B Z
C X
C X
B Z
B Y
A Y
A X
C Y
A X
A X
B Z
B Z
B Z
B Z
A Z
C X
A X
A X
A X
A X
A Y
A Z
A Y
A Y
B Z
A X
A Y
A X
A Z
A Z
A X
B Z
B Z
C Y
A X
B Z
C Y
B Z
B Z
A X
B Z
B X
A X
B Z
A Y
A Y
B X
B Z
B Z
C X
A X
B Z
A X
B X
B Z
A X
B Z
A X
B X
A X
A X
C X
A X
A X
B Z
A X
A X
A Y
B Z
B Z
C Y
B Z
A X
B Z
B Z
A Z
A X
B Z
A Y
B Z
C Y
A Z
A X
A Y
C Y
A X
A Y
C X
B Z
A X
A Y
A X
B Z
A Z
B Z
B Z
C Y
A X
C Y
A Z
B Z
B Z
A X
A X
B X
B Z
C Y
B Z
B Y
A X
B Z
A X
C X
B Z
A Y
A X
B Z
C Y
A Z
B Z
A X
A X
A Y
A Z
C X
B Z
B Z
B Z
A Z
B Z
C Y
B Z
B Z
B Z
B Z
B X
B Z
A X
B Z
B Z
A X
C X
C Y
B Z
B Z
A X
B Z
A X
A X
A Y
B Z
A Z
B Z
C Y
B Z
A X
A Y
C Y
B Y
A Y
A X
C Y
A X
A Z
A X
B Z
A Z
B Z
A X
B Z
C Y
A X
B Z
B X
B Z
A X
A X
A X
B Z
A Z
A Z
B Z
A X
B Z
B Z
A X
A X
B Z
B Z
A X
B Z
B X
B Z
C Y
A Z
B X
A X
B Z
B Z
A X
B Z
A X
B Z
B X
B X
A X
B Z
B Z
B Z
B Z
A Y
B Z
B Z
A X
C X
B Z
B Z
B Z
B Z
B Z
A X
C X
A Y
A X
A X
B Z
C Y
C X
B Z
A X
A Y
B Z
A X
B Z
C Y
B Z
A X
B Z
A Y
B X
A X
B Z
A X
B Z
A X
B Z
A X
C X
C X
A X
B Z
A Y
B Z
B Z
A X
A X
B Z
B Z
B Z
A X
A X
A X
C Y
A Y
B Z
B Z
B Z
B Z
A X
A X
B Z
B Z
C Y
A X
A X
B Z
A X
A Y
A X
B Z
B Z
B Z
A X
B Z
A X
B Z
A X
A X
B Z
A Y
A Z
B Y
A X
A Z
B Z
B Z
A Z
A X
A X
B Z
A X
B Z
A X
C X
A Z
A X
B Z
B Z
A X
A Z
C X
B Z
B Z
A X
B Z
B Z
A X
B Z
B Z
B Z
A Y
A Z
B Z
B Z
A X
B Z
B Z
B X
C X
B Z
B Z
B Z
A X
A X
A Z
B Z
C X
B Y
A Y
B Z
B Z
A X
A X
A Z
B Z
B Z
B Z
A X
A Z
A X
B Z
B Z
A Z
B Z
A Y
A Z
C Y
B Z
B Z
B Z
B Z
A Z
A Z
A Y
B Z
A X
A X
B Z
A Z
B Z
B Z
B X
C Y
B Z
C Y
B Z
A X
C Z
B Z
A X
A X
B Z
A Z
A X
B Z
A Z
A X
C Z
C X
B Z
B Z
B Z
B Z
B Z
C Y
A X
B Z
C Y
A X
B Z
B Z
A Z
A Z
B Z
C Y
A X
C X
B Z
B Z
B Z
B Z
A X
B Z
A X
B Z
A Y
B Z
B Z
B Z
B Z
B Z
C Y
B Z
B Z
A X
A X
A X
A Z
B Z
A Y
C Z
A Z
B Z
B Z
B Z
A X
B X
C Y
C X
C Y
B Z
B Z
B Z
B Z
A Y
B Z
A X
C X
A X
B X
C X
B Z
B Z
A X
A X
C Y
C Y
A X
B Z
C Y
A Y
A Z
A Y
B Z
B Z
B Z
A Y
B Z
A Z
A X
B Z
C X
A Z
B Z
A X
C X
A X
C Y
B X
B Z
B Z
A X
C Y
A X
B Z
C X
A Z
A Y
B Z
A Z
B Z
B Z
B Z
B Z
A X
A X
B Z
A Z
C Y
A Y
A X
A X
B Z
C Z
B Z
A Z
B X
C X
B Z
B Z
A X
A Z
A X
A Z
A X
B Z
B Z
C Y
B Z
B Z
B Z
B Z
A Z
B Z
B X
B Z
B Z
B Z
B Z
C X
C X
A X
B Z
B Z
B Z
B Z
B Z
B Z
A X
C X
B Z
B Z
A Y
B Z
A X
C Y
B Z
C Y
B Z
A Y
B Z
B Z
B Z
A X
A X
A X
B Z
C Y
B Z
A Z
A Y
A Z
A Y
B Z
A X
B X
B Z
A X
B Z
A Y
A X
B Z
A X
A X
A Y
A Y
A X
A X
A X
B Z
B Z
B Z
A X
B Z
A X
B Z
A X
B Y
B Y
A X
B Z
C X
A Z
C Y
A X
B Z
B Z
B Z
C Y
B X
C Y
B Z
B Z
B Z
A Z
B Z
B Z
B Z
C Y
B Z
B Z
A X
A Z
A Y
C Y
B Z
B Z
A X
B Z
B Z
A X
A X
B Z
B Y
B Z
B Z
A Z
B Z
B Z
A X
B Z
A X
C X
C X
A X
C Y
B Z
B Z
B Z
A X
C Y
B Z
B Z
B Z
B Z
B Z
B Z
B Z
B Z
B Z
B Z
C Y
C X
B Z
B Z
B Z
C Y
A Y
C Y
A X
B X
B Z
A X
C X
B Z
A Z
C X
C X
B Z
B Z
A Z
B Z
B X
B Z
B Z
B Z
A X
C X
B Z
A X
C Y
B Z
B Z
C X
B X
A X
B Z
C X
C X
B Z
B X
A X
B Z
A Y
B Z
A Z
A X
B Z
A X
A X
B Z
B Z
A X
B Z
A X
A X
C Y
B Z
A X
C Y
B Z
B Z
A X
A Y
C Y
B Z
A X
B Z
A X
A X
B Z
B Z
C Y
B Z
A X
A X
A X
A X
A Z
B Z
B Z
C X
C X
B Z
B Z
C Y
B Z
A Y
B Z
A X
C X
A Z
B Z
B Z
B Z
C Y
A X
B Z
B Z
C Y
B Z
C Y
B Z
A Z
B Z
A X
B Z
C Y
C Y
A X
A X
A Z
B Z
C Y
C Y
A X
B Z
B Z
A X
B Z
B Z
B Z
B Z
B X
B Y
A X
B Z
B Z
B Z
C Y
A X
A Y
B Z
A Z
A Z
B X
A X
C Y
B Z
B Z
A Z
B Z
C X
C X
A Z
B Z
A X
B Z
A X
B Z
B Z
B X
A X
A Z
B X
A X
B Z
A X
A X
A Z
A Y
B Z
A Y
C Y
C X
B Z
B Z
A X
A X
B Z
B Z
B Z
A Z
C X
A X
B Z
B Z
A X
B Z
B Z
B Z
A X
A Z
B Z
A X
B Z
A X
B Z
B Z
A X
C Y
A X
C X
A Z
B X
A Y
A Y
B Z
B Z
B Z
A X
A X
A X
A Y
B Z
B Z
B Z
B Z
B Z
B Z
B Z
B Z
C Y
B Z
B Z
B Z
C Y
A X
A Z
B Z
C Y
B Z
A Z
A X
B Z
A Y
B Z
B Z
A Z
B Z
A X
A Z
A Z
B Z
B Z
B Z
B Z
A X
A Z
B Z
B Z
B Z
B Z
A Z
B Z
C X
B Z
B Y
A X
B Z
B Z
A X
B Z
A X
A X
A X
A X
B X
B Z
C X
B Z
B Z
B Z
A X
B Z
C X
B Z
A Z
A X
A X
B Z
B Z
B Z
B Z
C X
A X
B Z
B Z
C Y
B Z
C Y
B Z
B Z
A X
B Z
A X
A Y
B Z
A Z
B Z
B Z
A Y
B Z
B Z
C Y
A X
A X
A X
A X
B Z
B Z
A Y
B Z
A Z
A X
A X
B Z
A Y
B Z
B Z
B X
A Y
A X
A X
C Y
C X
A X
B Z
B Z
B Z
A Y
B Z
C X
C X
C X
B Z
B Z
B Z
B Z
B Z
A X
B Z
A Y
B Z
A Y
C X
B X
B Z
B Z
A X
B X
B Z
B Z
B Z
B Z
B Z
A X
B Z
C X
B X
A X
A X
A X
A X
A X
B Z
C X
C Y
A X
B Z
C X
A Z
B Z
B Z
C Y
A X
A Z
B Z
B Z
B Z
B Z
B Z
B Z
A X
A X
B X
A X
B Z
A X
B Z
B Z
A Z
B Z
B Z
B Z
B Z
C X
B Z
A Z
B Z
B Z
A Z
A X
C X
B X
C X
A X
B Z
A Z
B X
B X
A Z
B Z
B Z
B X
B Z
B Z
C X
A Y
A X
A Z
B Z
A X
B Z
B Z
B Z
B Z
A X
A X
C Y
B Z
B Z
B Z
A Z
C X
C Y
B Y
B Z
B Z
A X
C Y
A Z
B Z
B Z
B Z
B Z
B Z
C X
B Z
A X
C X
A X
A Z
C Y
C X
B Z
B Z
A Y
A Z
A Z
A X
A Z
A Z
C Y
B Z
B Z
B Z
B Z
A Z
A X
A Y
C X
A X
B Z
B Z
B Z
A X
B Z
B Z
A Z
B Z
A X
B Z
A X
A Y
B Z
A X
A Z
B Z
A X
B Z
C X
B Z
B Z
C X
A Y
B Z
A Z
C X
C Z
C X
B Z
B Z
B Z
A X
B Z
C X
A X
A Y
A X
A Z
C Y
A X
B Z
B Z
C Z
A X
B Z
B Z
A X
A Z
B Z
A Y
B Z
C X
A X
A X
B Z
B Z
B Z
B X
C X
B Z
B Z
A X
A X
A Z
B Z
B Z
A Z
C Y
C Z
B Z
A X
A X
A X
C Y
A X
A X
A X
A Z
B Z
A Y
B Z
C X
B Z
A X
C X
B Z
A Y
A X
B Z
B Z
B Z
A X
A Y
B Z
A X
B Z
B Z
B Z
B Z
A X
A X
B Z
C X
B X
A Z
B Z
B Z
B Z
B Z
B Z`;

// Constants

const ROCK = "ROCK";
const PAPER = "PAPER";
const SCISSORS = "SCISSORS";

const mapChoices = {
  X: ROCK,
  Y: PAPER,
  Z: SCISSORS,
  A: ROCK,
  B: PAPER,
  C: SCISSORS,
};

const selfChoiceValue = { X: 1, Y: 2, Z: 3 };

// Start calculation
function splitStringByNewLine(str = "") {
  return str.split(/\r?\n/);
}
function add(values) {
  return values.reduce((sum, value) => sum + +value, 0);
}

function gamePlayScore(gamePlay) {
  const [opponentChoice, selfChoice] = gamePlay.split(" ");

  let score = selfChoiceValue[selfChoice];

  function gamePlayScore(opponentChoice, selfChoice) {
    const opponentChoiceString = mapChoices[opponentChoice];
    const selfChoiceString = mapChoices[selfChoice];

    if (opponentChoiceString === selfChoiceString) return 3;
    if (opponentChoiceString === ROCK && selfChoiceString === PAPER) return 6;
    if (opponentChoiceString === PAPER && selfChoiceString === SCISSORS)
      return 6;
    if (opponentChoiceString === SCISSORS && selfChoiceString === ROCK)
      return 6;
    return 0;
  }

  return score + gamePlayScore(opponentChoice, selfChoice);
}

const scores = splitStringByNewLine(strategy).map(gamePlayScore);
console.log("# Total score:", add(scores));

const LOOSE = "LOOSE";
const DRAW = "DRAW";
const WIN = "WIN";

const resultAction = {
  X: LOOSE,
  Y: DRAW,
  Z: WIN,
};

const choiceToShape = {
  ROCK: "X",
  PAPER: "Y",
  SCISSORS: "Z",
};

function transformGamePlayToShapeChoose(gamePlay) {
  let selfChoice;
  const [opponentChoice, selfStrategyChoice] = gamePlay.split(" ");
  const opponentChoiceString = mapChoices[opponentChoice];
  const gamePlayStrategyString = resultAction[selfStrategyChoice];

  if (gamePlayStrategyString === DRAW) selfChoice = opponentChoiceString;
  else {
    if (opponentChoiceString === ROCK) {
      selfChoice = gamePlayStrategyString === WIN ? PAPER : SCISSORS;
    }
    if (opponentChoiceString === SCISSORS) {
      selfChoice = gamePlayStrategyString === WIN ? ROCK : PAPER;
    }
    if (opponentChoiceString === PAPER) {
      selfChoice = gamePlayStrategyString === WIN ? SCISSORS : ROCK;
    }
  }

  return [opponentChoice, choiceToShape[selfChoice]].join(" ");
}

const scoresByStrategy = splitStringByNewLine(strategy)
  .map(transformGamePlayToShapeChoose)
  .map(gamePlayScore);
console.log("# Total strategy score:", add(scoresByStrategy));
